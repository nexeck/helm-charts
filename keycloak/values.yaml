image:
  ## Keycloak image.
  ##
  repository: jboss/keycloak

  ## keycloak image version.
  ## ref: https://hub.docker.com/r/jboss/keycloak/tags/
  ##
  tag: 3.3.0.Final

  ## Specify a imagePullPolicy: 'Always' if imageTag is 'latest', else set to 'IfNotPresent'.
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-image
  ##
  pullPolicy: IfNotPresent

keycloak:
  username: keycloak
  password: keycloak

  loglevel: INFO

  ## Ingress configuration.
  ## ref: https://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    ## Annotations to be added to the web ingress.
    ##
    annotations:
    #   kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: 'true'

    ## Hostnames.
    ## Must be provided if Ingress is enabled.
    ##
    hostname: keycloak.example.com

    ## TLS configuration.
    ## Secrets must be manually created in the namespace.
    ##
    tls:
      - secretName: keycloak.example.com-tls
        hosts:
          - keycloak.example.com
    #
    #
  service:
    # annotations:
    #   service.beta.kubernetes.io/aws-load-balancer-internal: "0.0.0.0/0"
    # labels:
    #   key: value
    type: ClusterIP
    externalPort: 80
    internalPort: 8080

postgresql:
  ## If bringing your own PostgreSQL, the full uri to use
  ## e.g. postgres://keycloak:changeme@my-postgres.com:5432/keycloak?sslmode=disable
  ##
  # uri:

  ### PostgreSQL User to create.
  ##
  postgresUser: keycloak

  ## PostgreSQL Password for the new user.
  ## If not set, a random 10 characters password will be used.
  ##
  postgresPassword: keycloak

  ## PostgreSQL Database to create.
  ##
  postgresDatabase: keycloak

  ## Persistent Volume Storage configuration.
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  ##
  persistence:
    ## Enable PostgreSQL persistence using Persistent Volume Claims.
    ##
    enabled: true
